{"version":3,"sources":["components/Profile/Profile.module.css","components/Profile/Status/Status.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/Status/StatusWithHooks.jsx","components/Profile/ProfileDataForm.jsx","components/Profile/Profile.jsx","hoc/withAuthRedirect.js","components/Profile/ProfileContainer.jsx"],"names":["module","exports","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","StatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onChange","e","currentTarget","autoFocus","onBlur","updateUserStatus","className","s","inputField","onDoubleClick","renderField","input","label","type","meta","touched","error","warning","placeholder","ProfileDataFormReduxForm","reduxForm","form","second__column","onSubmit","handleSubmit","Field","name","component","ProfileData","statusField","profile","lookingForAJob","lookingForAJobDesc","lookingForAJobDescription","aboutMe","contacts","contact","isOwner","onClick","goToEditMode","Profile","key","contacts__item","first__column","fullName","src","photos","large","minion","target","files","savePhoto","initialValues","saveProfile","mapStateToPropsForRedirect","state","isAuth","auth","ProfileContainer","render","match","params","userId","id","this","getUserProfile","setUserStatus","refreshProfile","prevProps","React","Component","compose","RedirectComponent","to","connect","withRouter","profilePage","follow","unfollow"],"mappings":"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","file":"static/js/3.a43369f5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3ggVm\",\"fullName\":\"Profile_fullName__2N4jL\",\"first__column\":\"Profile_first__column__2jaYw\",\"second__column\":\"Profile_second__column__2r7gP\",\"aboutMe\":\"Profile_aboutMe__19WSn\",\"contacts\":\"Profile_contacts__311Dv\",\"contacts__item\":\"Profile_contacts__item__26fJ5\",\"statusField\":\"Profile_statusField__cWKZg\",\"lookingForAJobDesc\":\"Profile_lookingForAJobDesc__3YE16\",\"lookingForAJobDescriptionarea\":\"Profile_lookingForAJobDescriptionarea__115U5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statusField\":\"Status_statusField__3gz8Q\",\"inputField\":\"Status_inputField__GuL18\"};","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, {useState, useEffect} from 'react'\r\nimport s from './Status.module.css';\r\n\r\nconst StatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const onStatusStage = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    const deActivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateUserStatus(status)\r\n    }\r\n    if (!editMode) {\r\n        return (\r\n            <div>\r\n                <span\r\n                    onDoubleClick={activateEditMode}>{props.status ? props.status : '***Use double-click for change status***'}</span>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div>\r\n                <input onChange={onStatusStage}\r\n                       autoFocus={true} onBlur={deActivateEditMode} className={s.inputField}\r\n                       value={status ? status : ''}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StatusWithHooks","import React, {useState}  from 'react'\r\nimport s from './Profile.module.css';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport handleSubmit from \"redux-form/lib/handleSubmit\";\r\n\r\nconst renderField = ({ input, label, type, meta: { touched, error, warning } }) => (\r\n    <div>\r\n        <label>{label}</label>\r\n        <div>\r\n            <input {...input} placeholder={label} type={type}/>\r\n            {touched && ((error && <span>{error}</span>) || (warning && <span>{warning}</span>))}\r\n        </div>\r\n    </div>\r\n);\r\n\r\n\r\nconst ProfileDataForm = (props) => {\r\n    return (\r\n        <form className={s.second__column} onSubmit={props.handleSubmit} >\r\n            <div>Looking For A Job:</div>\r\n            <Field name=\"lookingForAJob\" type=\"checkbox\" component={renderField} label=\"Find a job:\"/>\r\n            <Field name=\"lookingForAJobDescription\" type=\"text\" component={renderField} label=\"About my future work:\"/>\r\n            <Field name=\"fullName\" type=\"text\" component={renderField} label=\"Full name\"/>\r\n            <Field name=\"aboutMe\" type=\"text\" component={renderField} label=\"About me\"/>\r\n            <div>Contacts: </div>\r\n            <Field name=\"contacts.github\" type=\"text\" component={renderField} label=\"github:\"/>\r\n            <Field name=\"contacts.vk\" type=\"text\" component={renderField} label=\"vk:\"/>\r\n            <Field name=\"contacts.facebook\" type=\"text\" component={renderField} label=\"facebook:\"/>\r\n            <Field name=\"contacts.instagram\" type=\"text\" component={renderField} label=\"instagram:\"/>\r\n            <Field name=\"contacts.twitter\" type=\"text\" component={renderField} label=\"twitter:\"/>\r\n            <Field name=\"contacts.website\" type=\"text\" component={renderField} label=\"website:\"/>\r\n            <Field name=\"contacts.youtube\" type=\"text\" component={renderField} label=\"youtube:\"/>\r\n            <Field name=\"contacts.mainLink\" type=\"text\" component={renderField} label=\"mainLink:\"/>\r\n            <div><button>Save</button></div>\r\n        </form>\r\n    );\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'editPROFILE'})(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm","import React, {useState}  from 'react'\r\nimport s from './Profile.module.css';\r\nimport StatusWithHooks from \"./Status/StatusWithHooks\";\r\nimport minion from \"../../img/minion.png\"\r\nimport ProfileDataFormReduxForm from \"./ProfileDataForm.jsx\";\r\n\r\nlet ProfileData = (props) => {\r\n    return (\r\n        <div className={s.second__column}>\r\n            <span>Status:</span>\r\n            <div className={s.statusField}><StatusWithHooks status={props.status} updateUserStatus={props.updateUserStatus} /></div>\r\n            <span>Looking for a job : {props.profile.lookingForAJob ? \"Yes\" : \"No\"}</span>\r\n            <span>About my future work: <div className={s.lookingForAJobDesc}>{props.profile.lookingForAJob ? props.profile.lookingForAJobDescription : \"No\"}</div></span>\r\n            <span>About me: </span>\r\n            <div className={s.aboutMe}>{props.profile.aboutMe ? props.profile.aboutMe : \"***without about me***\"}</div>\r\n            <span>Contacts: </span>\r\n            <div className={s.contacts}>{props.contact.length !== 0 ?  props.contact : \"***without contact***\"}</div>\r\n            {!props.isOwner ? <button onClick={props.goToEditMode} >edit</button> : <div></div>}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nlet Profile = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n\r\n    const onSubmit = (e) => {\r\n        props.saveProfile(e)\r\n        setEditMode(false)\r\n    }\r\n\r\n    let toggleEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const onMainPhotoSelector = (e) => {\r\n        if (e.target.files.length) {\r\n            props.savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n    if (!props.profile) {\r\n        return (<div></div>);\r\n    } else {\r\n        let contact = []\r\n        for (let key in props.profile.contacts) {\r\n            if (props.profile.contacts[key]) {\r\n                contact.push(<div className={s.contacts__item}>{key + \": \"}{props.profile.contacts[key]}</div>)\r\n            }\r\n        }\r\n        return (\r\n            <div className={s.profile}>\r\n                <div className={s.first__column}>\r\n                    <div className={s.fullName}>{props.profile.fullName}</div>\r\n                    <img src={props.profile.photos.large ? props.profile.photos.large : minion}></img>\r\n                    {!props.isOwner ? <input onChange={onMainPhotoSelector} type={\"file\"}/> : <div><button>Send message</button></div>}\r\n                </div>\r\n                {editMode ? <ProfileDataFormReduxForm initialValues={props.profile} {...props}contact={contact} onSubmit={onSubmit}/>\r\n                : <ProfileData {...props} goToEditMode={toggleEditMode} contact={contact}/>}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Profile","import React from 'react';\r\nimport {Redirect} from 'react-router-dom'\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\n\r\nlet mapStateToPropsForRedirect  = (state) => {\r\n    return ({\r\n        isAuth: state.auth.isAuth\r\n    });\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) {\r\n                return <Redirect to={'/login'} />\r\n            } else {\r\n                return <Component {...this.props} />\r\n            }\r\n        }\r\n    }\r\n\r\n    let ConnectedRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedRedirectComponent\r\n}","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getUserProfile, setUserStatus, updateUserStatus, savePhoto, saveProfile} from \"../../redux/profileReducer\";\r\nimport {Redirect, withRouter} from 'react-router-dom'\r\nimport {follow, unfollow} from \"../../redux/usersReducer\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let id = this.props.match.params.userId\r\n        this.props.getUserProfile(id)\r\n        this.props.setUserStatus(id)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n            this.refreshProfile()\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <div>\r\n                <Profile {...this.props} isOwner={!!this.props.match.params.userId} profile={this.props.profile} status={this.props.status}\r\n                         updateUserStatus={this.props.updateUserStatus}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n})\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    withRouter,\r\n    connect(mapStateToProps, {\r\n        follow,\r\n        unfollow,\r\n        getUserProfile,\r\n        updateUserStatus,\r\n        setUserStatus,\r\n        savePhoto,\r\n        saveProfile\r\n    })\r\n)(ProfileContainer)"],"sourceRoot":""}